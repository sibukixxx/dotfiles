[user]
  name = sibukixxx
  email = sibukixxx@gmail.com
[url "git@github.com:sibukixxx/"]
  insteadof = gh:
[color]
  # colorの設定(以下のコマンドは自動で色つける)
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[push]
  default = tracking       # defaultのpush先はtrackingしているリポジトリ
[core]
  excludesfile = ~/.gitignore  # globalな.gitignoreの指定
	autoCRLF = false
  precomposeunicode = true
  editor = vim
[alias]
  st = status
  sh = show
  so = remote show origin
  ft = fetch
  up = pull --rebase       # pull rebase
  rbm = rebase master      # masterへのrebaseはよく使うのでalias
  ad = add
  ci = commit -a           # modifiedなファイルを全てstageへ
  cam = commit -a --amend  # 直前のcommitを修正
  co = checkout
  puhs = push
  psuh = push
  pus = push
  puh = push
  pl = !git pull && git submodule update --init
  # commit関連 http://qiita.com/ken_c_lo/items/4cb49f0fb74e8778804d
  ci-trash = commit -m ":put_litter_in_its_place:"`
  # branch関連
  br = branch
  ba = branch -a           # originも含めた全てのbranchを表示
  bm = branch --merged     # merge済みのbranchを表示
  bn = branch --no-merged  # mergeしてないbranchを表示
  # log関連
  wc = whatchanged         # logに変更されたファイルも一緒に出す
  ls = log --stat          # logに変更されたファイルも一緒に出す
  lp = log -p              # diffも一緒に出す
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
  lr = log origin          # originのlog
  oneline = log --pretty=oneline
  ranking = shortlog -s -n --no-merges
  # logをtree表示
  gra1 = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  gra2 = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  lga = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  # diff関連
  dm = diff master           # masterとのdiff
  dw = diff --color-words    # 単語単位でいろつけてdiff
  dc = diff --cached         # addされているものとのdiff
  ds = diff --staged         # 同上(1.6.1移行)
  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff
  
  # 1ファイルだけ別のブランチから持ってくる
  ## git checkout <ブランチ名> -- <ファイル名> 
  unstage = reset -q HEAD --
  discard = checkout --
  nevermind = !git reset --hard HEAD && git clean -d -f
  uncommit = reset --mixed HEAD~
  save = commit -m
  resave = commit --amend
  invert = revert
  last = log -1 HEAD --format=format:"%Cred%H"
  summary = status -u -s
  graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
  history = log -10 --format=format:'%Cgreen%h %Creset• %s (%cN, %ar)'
  branchout = checkout -b
  tags = tag
  branches = branch -a
  stashes = stash list
  remotes = remote -v
  prestage = diff -w --word-diff=color
  precommit = diff --cached -w --word-diff=color --word-diff-regex='[^[:space:]<>]+'
  move = mv
  remove = rm
  unmerged = branch --no-merged
  unstash = stash pop
  what = show -w
  untrack = rm -r --cached
  rewrite = rebase -i
  amend = commit --amend
  back = checkout "-"
  contributors = shortlog -s -n
  filetrail = git log --follow -p -w
  mergetrail = log --ancestry-path --merges
  unmerged = diff --name-only --diff-filter=U

  # mergeの際にconflictが起きたファイルを編集
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # mergeの際にconflictが起きたファイルをadd
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  # grep関連
  gr = grep
  gn = grep -n
  delete-merged-branches = !git branch --merged | grep -vE \"^\\*|master$|develop$\"|xargs -I % git branch -d %
  delete-merged-branches-list = !git branch --merged | grep -vE \"^\\*|master$|develop$\"
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[commit]
  #template = .gitmessage.txt
[log]
  decorate = true
[rerere]
  enabled = true

[ghq]
	root = ~/repos
[commit]
	#template = /Users/sibukixxx/.gitmessage.txt
[http]
	#proxy = http://192.168.16.51:3128
